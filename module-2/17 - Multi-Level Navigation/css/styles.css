/* Global Variables */

:root {
    --cyan-900: #006064;
    --cyan-700: #0097a7;
    --grey-50: #eceff1;
    --grey-100: #cfd8dc;
    --grey-900: #263238;
    --box-shadow: 10px 10px 19px 0px rgba(236, 239, 241, 1);
}

/* Soft Reset */

body {
    color: var(--grey-900);
    font-family: "Open Sans", sans-serif;
}


svg {
    height: 1.125rem;
}

.inner-container{
    margin:auto;
    max-width:1280px;
}

.wide-flex{
    display:flex;
    flex-direction:column;
    gap:1rem;
}

h1{
    font-weight:300;
    font-size:2.125rem;
    line-height:1.1;
    margin:0;
}

a,
button{
    font-size:1.125rem;
}

a{
    color:var(--cyan-900);
    text-decoration:none;
    transition: all 0.3s;
}

header{
    border-bottom: 1px solid var(--grey-100);
    padding:0.5rem 1rem;
    box-shadow: 10px 10px 20px 0 rgba(236, 239, 241, 1);
}

/*Making the position property of this element relative, will allow us to use
absolute positionning on its children element. More specifically, we want to use it on the
"collapse" class*/
.top-level{
    position:relative;
}


.collapsed{
    position:absolute;
    visibility:hidden;
}
    
.expanded{
    position:unset;
    visibility:unset;
}

.toggle-btn{
    background-color: var(--cyan-900);
    color:white;
    border:none;
    border-radius:1rem;
    padding:0.25rem 2rem;
    text-align:center;
    text-transform: uppercase;
    transition: all 0.3s;
}

a:hover,
a:focus{
    color:var(--cyan-700);
    text-decoration: underline;

}

.toggle-btn:hover,
.toggle-btn:focus{
    background-color:var(--cyan-700);

}

/**Media Query for larger screens*/
@media screen and (min-width:960px){
    .wide-flex{
        flex-direction:row;
        align-items:center;
        justify-content:space-between;
    }

    .dropdown{
        background-color: white;
        border: 1px solid var(--grey-100);
        border-radius:0 0 4px 4px;
        position:absolute;
        top: 3rem;
        width: 11.5rem;
    }
}
